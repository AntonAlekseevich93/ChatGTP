CREATE TABLE Messages (
    message TEXT NOT NULL,
    messageId INTEGER NOT NULL,
    isUser INTEGER NOT NULL,
    parentMessageId INTEGER,
    parentMessageText TEXT,
    childMessageId INTEGER
);

CREATE TABLE Keys (
    key TEXT NOT NULL,
    modelGpt Text NOT NULL
);

CREATE TABLE Settings (
  themeId INTEGER NOT NULL
);

insertMessage:
INSERT INTO Messages(message, messageId, isUser, parentMessageId, parentMessageText, childMessageId)
VALUES(? , ?, ?, ?, ?,?);

removeAllMessages:
DELETE FROM Messages;

selectAllMessagesInfo:
SELECT *
FROM Messages;

updateChildIdForParentMessage:
UPDATE Messages
SET `childMessageId`=? WHERE messageId=?;

getMessageById:
SELECT *
FROM Messages WHERE messageId =?;

insertKey:
INSERT INTO Keys(key, modelGpt)
VALUES(? , ?);

removeAllKeys:
DELETE FROM Keys;

selectAllKeysInfo:
SELECT *
FROM Keys;

insertThemeId:
INSERT INTO Settings(themeId)
VALUES(?);

removeAllSettings:
DELETE FROM Settings;

selectAllSettings:
SELECT *
FROM Settings;

keyedQuery:
SELECT * FROM Messages
WHERE messageId >= :beginInclusive AND (messageId <= :endExclusive OR :endExclusive IS NULL)
ORDER BY messageId ASC;

selectMessagesPage:
SELECT * FROM Messages
WHERE messageId <= :endExclusive AND (messageId >= :beginInclusive OR :beginInclusive IS NULL)
ORDER BY messageId ASC;

lastMessageId:
SELECT * FROM Messages ORDER BY messageId DESC LIMIT 1;